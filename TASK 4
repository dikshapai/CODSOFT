#include <iostream>
#include <string>
using namespace std;

const int MAXIMUM_TASKS = 100;

struct task 
{
    string description;
    bool completed;
};

bool addtask (task Tasks[], int& numtasks, const string& description)

{
    if(numtasks >= MAXIMUM_TASKS)
    {
        cout<< "Sorry, the Task is full."<<endl;
        return false;
    }
    task Task ;
    Task.description= description;
    Task.completed= false;
    Tasks[numtasks++]= Task;
    cout<< "Task added."<<endl;
    return true;
}

void viewtasks(const task Tasks[], int numtasks)
{
    cout<< "To-do list:"<<endl;
    for(int i = 0; i< numtasks; ++i)
    {
        cout<< i+1<<".";
        if(Tasks[i].completed)
        {
            cout<<"[O completed]";
        } else
            {
                cout<< "[X Pemding]";
            }
            cout<< Tasks[i].description<< endl;
    }
}

bool marktaskascompleted(task Tasks[], int numtasks, int index)
{
    if(index < 0 || index>= numtasks)
    {
        cout<< "Invalid task . Please try again."<<endl;
        return false;
    }
    Tasks[index].completed = true ;
    cout<< "Tasks completed."<<endl;
    return true;
}

bool removetask(task Tasks[], int& numtasks,int index )
{
    if(index <0 || index>= numtasks)
    {
        cout<< "Invalid task inex. Please try again."<<endl;
        return false;
    }
    for (int i = index; i < numtasks-1;++i)
    {
        Tasks[i]= Tasks[i+1];
    }
    
    numtasks --;
    cout<< "Tasks removed successfully."<< endl;
    return true;
}

int main()
{
    task Tasks[MAXIMUM_TASKS];
    int numtasks = 0;
    
    while(true)
    {
        cout<< "Welcome to TO-DO LIST"<< endl;
        cout<< "1. ADD TASK"<< endl;
        cout<< "2. VIEW TASK"<< endl;
        cout<< "3. MARK TASK"<< endl;
        cout<< "4. REMOVE TASK"<< endl;
        cout<< "5. EXIT TASK"<< endl;
        
        int choice;
        cout<<"Enter your choice from 1-5:";
        cin>>choice;
        
        cin.ignore ();
        
        switch(choice){
            case 1 : {
                cout<< "Enter the task description :";
                string description;
                getline(cin, description);
                addtask(Tasks,numtasks,description);
                break;
            }
            case 2 :
                viewtasks(Tasks, numtasks);
                break;
            case 3:{
                viewtasks (Tasks, numtasks);
                cout<< " Enter the Task number to mark as completed:";
                int markindex;
                cin>> markindex;
                marktaskascompleted(Tasks, numtasks, markindex-1);
                break;
            }
            case 4 :{
                viewtasks (Tasks, numtasks);
                cout<< " Enter the Task number to remove:";
                int removeindex;
                cin>> removeindex;
                removetask(Tasks, numtasks, removeindex-1);
                break;
            }
            case 5:
            cout<<"Have a good day."<<endl;
            return 0;
            default:
            cout<< "Invalid choice. Please select a valid option."<< endl;
            break;
        }
    }
    return 0 ;
}
           

    
